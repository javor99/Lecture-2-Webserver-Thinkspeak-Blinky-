#include <WiFi.h>
#include <DHT.h>
#include <ThingSpeak.h>

#define DHTTYPE DHT11
const char* ssid = "Betzy";
const char* password = "Meyers23";

WiFiClient client;

const int DHTPin = 32;
DHT dht(DHTPin, DHTTYPE);

char celsiusTemp[7];
char fahrenheitTemp[7];
char humidityTemp[7];

unsigned long channelID =  2429173; // your channel
const char * myWriteAPIKey = "JBRMUGQ9MZWQZ904"; // your WRITE API key
const char* server = "api.thingspeak.com";

const int postingInterval = 20 * 1000; // post data every 20 seconds

void setup() {
  Serial.begin(115200);
  delay(10);
  dht.begin();

  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");

  ThingSpeak.begin(client);
}

void loop() {
  if (WiFi.status() == WL_CONNECTED) {
    long rssi = WiFi.RSSI();
    Serial.print("RSSI: ");
    Serial.println(rssi); 

    float h = dht.readHumidity();
    float t = dht.readTemperature();
    float f = dht.readTemperature(true);

    if (isnan(h) || isnan(t) || isnan(f)) {
      Serial.println("Failed to read from DHT sensor!");
    } else {
      float hic = dht.computeHeatIndex(t, h, false);       
      dtostrf(hic, 6, 2, celsiusTemp);             
      float hif = dht.computeHeatIndex(f, h);
      dtostrf(hif, 6, 2, fahrenheitTemp);         
      dtostrf(h, 6, 2, humidityTemp);

      Serial.print("Humidity: ");
      Serial.print(h);
      Serial.print(" %\t Temperature: ");
      Serial.print(t);
      Serial.print(" *C ");
      Serial.print(f);
      Serial.print(" *F\t Heat index: ");
      Serial.print(hic);
      Serial.print(" *C ");
      Serial.print(hif);
      Serial.print(" *F");
      Serial.print("Humidity: ");
      Serial.print(h);
      Serial.print(" %\t Temperature: ");
      Serial.print(t);
      Serial.print(" *C ");
      Serial.print(f);
      Serial.print(" *F\t Heat index: ");
      Serial.print(hic);
      Serial.print(" *C ");
      Serial.print(hif);
      Serial.println(" *F");

      ThingSpeak.setField(1, t);
      ThingSpeak.setField(2, f);
      ThingSpeak.setField(3, h);
      ThingSpeak.setField(4, rssi);
      ThingSpeak.writeFields(channelID, myWriteAPIKey);
    }
  } else {
    Serial.println("WiFi Disconnected. Attempting to reconnect...");
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
      delay(500);
      Serial.print(".");
    }
    Serial.println("WiFi Reconnected.");
  }

  delay(postingInterval);
}
